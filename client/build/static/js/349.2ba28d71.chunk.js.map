{"version":3,"file":"static/js/349.2ba28d71.chunk.js","mappings":"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","sources":["components/Email.jsx","components/common/NoMails.jsx","components/Emails.jsx","constants/constants.js","services/api.js","hooks/useApi.jsx","components/Header.jsx","config/sidebar.config.js","components/Compose.jsx","components/SideBarContents.jsx","components/SideBar.jsx","pages/Main.jsx","services/api.urls.js"],"sourcesContent":["import {Box, Typography, Checkbox, styled} from \"@mui/material\";\r\nimport {Star, StarBorder} from \"@mui/icons-material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {routes} from \"../routes/routes.js\";\r\nimport useApi from \"../hooks/useApi.jsx\";\r\nimport { API_URLS } from \"../services/api.urls.js\";\r\n\r\n\r\nconst Wrapper = styled(Box)({\r\n    padding: '0 0 0 10px',\r\n    background: '#f2f6fc',\r\n    cursor: 'pointer',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    '& > div': {\r\n        display: 'flex',\r\n        width: '100%',\r\n        '& > p': {\r\n            fontSize: 14\r\n        }\r\n    }\r\n});\r\n\r\nconst Indicator = styled(Typography)({\r\n    fontSize: '12px !important',\r\n    background: '#ddd',\r\n    color: '#222',\r\n    padding: '0 4px',\r\n    borderRadius: '4px',\r\n    marginRight: '6px'\r\n});\r\n\r\nconst Date = styled(Typography)({\r\n    marginLeft: 'auto',\r\n    marginRight: '20px',\r\n    fontSize: '12px',\r\n    color: '#5F6368'\r\n})\r\n\r\nconst Email = ({email, selectedEmails, setRefreshScreen, setSelectedEmails}) => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const toggleStarredService = useApi(API_URLS.toggleStarredEmail);\r\n\r\n    const toggleStarredMails = () => {\r\n        toggleStarredService.call({ id: email._id, value: !email.starred});\r\n        setRefreshScreen(prevState => !prevState);\r\n    }\r\n\r\n    const onValueChange = () =>{\r\n        if(selectedEmails.includes(email._id)){\r\n            setSelectedEmails(prevState => prevState.filter(id => id != email._id));\r\n        } else {\r\n            setSelectedEmails(prevState => [...prevState, email._id]);\r\n        }\r\n    }\r\n    return(\r\n        <Wrapper>\r\n            <Checkbox \r\n                size='small' \r\n                checked={selectedEmails.includes(email._id)} \r\n                onChange={() => onValueChange()}\r\n            />\r\n            {\r\n                email.starred ? \r\n                    <Star fontSize='small' style={{ marginRight: 10, color: '#FFF200'}} onClick={() => toggleStarredMails()} />\r\n                :\r\n                    <StarBorder fontSize='small' style={{marginRight: 10}} onClick={() => toggleStarredMails()}/>\r\n            }\r\n            <Box onClick={() => navigate(routes.view.path, {state: {email: email}})}>\r\n                <Typography style={{width: 200, overflow: 'hidden'}}>{email.name}</Typography>\r\n                <Indicator>Inbox</Indicator>\r\n                <Typography>{email.subject} {email.name && '-'} {email.body}</Typography>\r\n                <Date>\r\n                    {(new window.Date(email.date)).getDate()} {(new window.Date(email.date)).toLocaleString('default', {month: 'short'})}\r\n                </Date>\r\n            </Box>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Email;","import {Box, Typography, styled, Divider} from \"@mui/material\";\r\n\r\nconst Component = styled(Box)({\r\n    display: 'flex', \r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n    marginTop: 50,\r\n    opacity: '.8',\r\n    width: '100%'\r\n});\r\n\r\nconst StyledDivider = styled(Divider)({\r\n    width: '100%',\r\n    marginTop: 10\r\n})\r\n\r\nconst NoMails = ({message}) => {\r\n    return (\r\n        <Component>\r\n            <Typography>{message.heading}</Typography>\r\n            <Typography>{message.subHeading}</Typography>\r\n            <StyledDivider />\r\n        </Component>\r\n    )\r\n}\r\n\r\nexport default NoMails;","import { useOutletContext, useParams } from \"react-router-dom\";\r\nimport { API_URLS } from \"../services/api.urls\";\r\nimport useApi from \"../hooks/useApi\";\r\nimport { useEffect } from \"react\";\r\nimport {Checkbox, Box, List, ListItem} from '@mui/material';\r\nimport { Api, DeleteOutline} from '@mui/icons-material';\r\nimport Email from \"./Email\";\r\nimport { useState } from \"react\";\r\nimport NoMails from \"./common/NoMails\";\r\nimport { EMPTY_TABS } from \"../constants/constants\";\r\n\r\nconst Emails = () => {\r\n    const [selectedEmails, setSelectedEmails] = useState([]);\r\n\r\n    const [refreshScreen, setRefreshScreen] = useState(false);\r\n\r\n    const {openDrawer} = useOutletContext();\r\n    const {type} = useParams();\r\n\r\n    const getEmailsService = useApi(API_URLS.getEmailFromType);\r\n    const moveEmailsToBinService = useApi(API_URLS.moveEmailsToBin);\r\n    const deleteEmailService = useApi(API_URLS.deleteEmail);\r\n    \r\n    useEffect(() => {\r\n        getEmailsService.call({}, type);\r\n    }, [type, refreshScreen])\r\n\r\n    const selectAllEmails = (e) => {\r\n        if(e.target.checked){\r\n            const emails = getEmailsService?.response?.map(email => email._id);\r\n            setSelectedEmails(emails);\r\n        } else {\r\n            setSelectedEmails([]);\r\n        }\r\n    }\r\n\r\n    const deleteSelectedEmails = (e) => {\r\n        if(type === 'bin'){\r\n            deleteEmailService.call(selectedEmails);\r\n        } else {\r\n            moveEmailsToBinService.call(selectedEmails);\r\n        }\r\n        setRefreshScreen(prevState => !prevState);\r\n    }\r\n\r\n    return (\r\n        <Box style={openDrawer ? {width: 'calc(100% - 250px)', marginLeft: 250} : {width: '100%'}}>\r\n            <Box style={{padding: '20px 10px 0 10px', display: 'flex', alignItems: 'center'}}>\r\n                <Checkbox size='small' onChange={(e) => selectAllEmails(e)}/>\r\n                <DeleteOutline onClick={(e) => deleteSelectedEmails(e)}/>\r\n            </Box>\r\n            <List>\r\n                {\r\n                    getEmailsService?.response?.map(email => (\r\n                        <Email \r\n                            key={email._idd}\r\n                            email={email}\r\n                            selectedEmails={selectedEmails}\r\n                            setRefreshScreen={setRefreshScreen}\r\n                            setSelectedEmails={setSelectedEmails}\r\n                        />\r\n                    ))\r\n                }\r\n            </List>\r\n            {\r\n                getEmailsService?.response?.length === 0 &&\r\n                    <NoMails message={EMPTY_TABS[type]}/>\r\n            }\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Emails;","export const gmailLogo = 'https://ssl.gstatic.com/ui/v1/icons/mail/rfr/logo_gmail_lockup_default_1x_r5.png';\r\nexport const emptyInbox = 'https://miro.medium.com/max/1088/1*DhOnyEHovQZ31rH00-VUDw.png';\r\nexport const emptyProfilePic = 'https://ssl.gstatic.com/ui/v1/icons/mail/profile_mask2.png';\r\n\r\nexport const EMPTY_TABS = {\r\n    inbox: {\r\n        heading: 'Your inbox is empty',\r\n        subHeading: \"Mails that don't appear in other tabs will be shown here.\"\r\n    },\r\n    drafts: {\r\n        heading: \"You don't have any saved drafts.\",\r\n        subHeading: \"Saving a draft allows you to keep a message you aren't ready to send yet.\"\r\n    },\r\n    starred: {\r\n        heading: 'No starred messages',\r\n        subHeading: \"Stars let you give messages a special status to make them easier to find. To star a message, click on the star outline beside any message or conversation.\"\r\n    },\r\n    sent: {\r\n        heading: 'No sent messages!',\r\n        subHeading: 'Send one now!'\r\n    },\r\n    bin: {\r\n        heading: 'No conversations in Bin.',\r\n        subHeading: ''\r\n    },\r\n    allmail: {\r\n        heading: \"Wow! it's empty\",\r\n        subHeading: ''\r\n    }\r\n}","import axios from 'axios';\r\n\r\nconst API_URL = \"\";\r\n\r\nconst API_GMAIL = async (urlObject, payload, type) => {\r\n    return await axios({\r\n        method: urlObject.method,\r\n        url: `${API_URL}/${urlObject.endpoint}/${type}`,\r\n        data: payload\r\n    })\r\n};\r\n\r\nexport default API_GMAIL;","import { useState } from 'react';\r\nimport API_GMAIL from '../services/api.js';\r\n\r\nconst useApi = (urlObject) => {\r\n    const [response, setResponse] = useState(null);\r\n    const [error, setError] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const call = async (payload, type = '') => {\r\n        setResponse(null);\r\n        setError(\"\");\r\n        setIsLoading(true);\r\n        try {\r\n            let res = await API_GMAIL(urlObject, payload, type);\r\n            setResponse(res.data);\r\n        } catch (error) {\r\n            setError(error.message);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    return {call, response, error, isLoading};\r\n};\r\n\r\nexport default useApi;","import {AppBar, Toolbar, styled, Box, InputBase} from '@mui/material';\r\nimport {Menu as MenuIcon, Search, Tune, HelpOutline, SettingsOutlined, AppsOutlined,\r\n        AccountCircleOutlined} from '@mui/icons-material';\r\nimport {gmailLogo} from \"../constants/constants\";\r\n\r\nconst StyledAppBar = styled(AppBar)({\r\n    background: '#F5F5F5',\r\n    boxShadow: 'none'\r\n});\r\n\r\nconst SearchWrapper = styled(Box)({\r\n    background: \"#EAF1FB\",\r\n    marginLeft: 80,\r\n    borderRadius: 8,\r\n    minWidth: 690,\r\n    maxWidth: 720,\r\n    height: 48,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    padding: '0 20px',\r\n    '& > div': {\r\n        width: '100%',\r\n        padding: '0 10px'\r\n    }\r\n});\r\n\r\nconst OptionsWrapper = styled(Box)({\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'end',\r\n    '& > svg':{\r\n        marginLeft: '20px'\r\n    }\r\n\r\n})\r\nconst Header = function({toggleDrawer}){\r\n    return (\r\n    <StyledAppBar position='static'>\r\n        <Toolbar>\r\n            <MenuIcon color = 'action' onClick={toggleDrawer}/>\r\n            <img src={gmailLogo} alt='logo' style={{width: 110, marginLeft: 15}}/>\r\n            <SearchWrapper>\r\n                <Search color=\"action\"/>\r\n                <InputBase placeholder='Search Mail'/>\r\n                <Tune color=\"action\"/>\r\n            </SearchWrapper>\r\n            <OptionsWrapper>\r\n                <HelpOutline color = \"action\"/>\r\n                <SettingsOutlined color = \"action\"/>\r\n                <AppsOutlined color = \"action\"/>\r\n                <AccountCircleOutlined color = \"action\"/>\r\n            </OptionsWrapper>\r\n        </Toolbar>\r\n    </StyledAppBar>)\r\n}\r\n\r\nexport default Header;","import {Inbox, StarOutline, Send, InsertDriveFile, DeleteOutline\r\n        , MailOutline} from '@mui/icons-material';\r\n\r\nconst SIDEBAR_DATA = [\r\n    {\r\n        name: 'inbox',\r\n        title: 'Inbox',\r\n        icon: Inbox\r\n    },\r\n    {\r\n        name: 'starred',\r\n        title: 'Starred',\r\n        icon: StarOutline\r\n    },\r\n    {\r\n        name: 'sent',\r\n        title: 'Sent',\r\n        icon: Send\r\n    },\r\n    {\r\n        name: 'drafts',\r\n        title: 'Drafts',\r\n        icon: InsertDriveFile\r\n    },\r\n    {\r\n        name: 'bin',\r\n        title: 'Bin',\r\n        icon: DeleteOutline\r\n    },\r\n    {\r\n        name: 'allmail',\r\n        title: 'All Mail',\r\n        icon: MailOutline\r\n    }\r\n];\r\n\r\nexport default SIDEBAR_DATA;","import {Dialog, Box, Typography, InputBase, TextField, Button} from '@mui/material';\r\nimport {Close, DeleteOutline} from '@mui/icons-material';\r\nimport styled from '@emotion/styled';\r\nimport {useState} from 'react';\r\nimport useApi from '../hooks/useApi';\r\nimport { API_URLS } from '../services/api.urls';\r\n\r\nconst dialogstyle = {\r\n    height: '90%',\r\n    width: '80%',\r\n    maxHeight: '100%',\r\n    maxWidth: '100%',\r\n    borderRadius: '10px 10px 0 0',\r\n    boxShadow: 'none'\r\n}\r\n\r\nconst Header = styled(Box)({\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    padding: '10px 15px',\r\n    background: '#f2f6fc',\r\n    '& > p':{\r\n        fontSize: 14,\r\n        fontWeight: 500\r\n    }\r\n});\r\n\r\nconst RecipientsWrapper = styled(Box)({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    padding: '0 15px',\r\n    '& > div':{\r\n        fontSize: 14,\r\n        borderBottom: '1px solid #F5F5F5',\r\n        marginTop: 10\r\n    },\r\n});\r\n\r\nconst Footer = styled(Box)({\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    padding: '0px 15px'\r\n});\r\n\r\nconst CustomButton = styled(Button)({\r\n    background: '#0B57D0',\r\n    color: '#fff',\r\n    fontWeight: 500,\r\n    textTransform: 'none',\r\n    borderRadius: 18,\r\n    width: 100\r\n})\r\n\r\n\r\nconst ComposeMail = function({openDialog, setOpenDialog}){\r\n    const [data, setData] = useState({});\r\n    const sentEmailService = useApi(API_URLS.saveSentEmail);\r\n    const saveDraftService = useApi(API_URLS.saveDraftEmails);\r\n\r\n    const config = {\r\n        Host : \"smtp.elasticemail.com\",\r\n        Username : process.env.REACT_APP_USERNAME,\r\n        Password : process.env.REACT_APP_PASSWORD,\r\n        Port: 2525\r\n    }\r\n\r\n    const CloseMail = function(e){\r\n        e.preventDefault();\r\n        const payload = {\r\n            to: data.to,\r\n            from: 'justforresearchpuropse1@gmail.com',\r\n            subject: data.subject,\r\n            body: data.body,\r\n            date: new Date(),\r\n            image: '',\r\n            name: 'research',\r\n            starred: false,\r\n            type: 'drafts'\r\n        }\r\n        saveDraftService.call(payload);\r\n\r\n        if(!saveDraftService.error){\r\n            setOpenDialog(false);\r\n            setData({});\r\n        } else {\r\n            \r\n        }\r\n    }\r\n    const SendMail = (e) => {\r\n        e.preventDefault();\r\n        if(window.Email){\r\n            window.Email.send({\r\n                ...config,\r\n                To : data.to,\r\n                From : 'justforresearchpurpose1@gmail.com',\r\n                Subject : data.subject,\r\n                Body : data.body\r\n            }).then(\r\n              message => alert(message)\r\n            );\r\n        }\r\n\r\n        const payload = {\r\n            to: data.to,\r\n            from: 'justforresearchpuropse1@gmail.com',\r\n            subject: data.subject,\r\n            body: data.body,\r\n            date: new Date(),\r\n            image: '',\r\n            name: 'research',\r\n            starred: false,\r\n            type: 'sent'\r\n        }\r\n        sentEmailService.call(payload);\r\n\r\n        if(!sentEmailService.error){\r\n            setOpenDialog(false);\r\n            setData({});\r\n        } else {\r\n            \r\n        }\r\n\r\n        setOpenDialog(false);\r\n    }\r\n\r\n    const onValueChange = (e) => {\r\n        setData({...data, [e.target.name]: e.target.value});\r\n    }\r\n    return(\r\n        <Dialog\r\n        open = {openDialog}\r\n        PaperProps={{sx: dialogstyle}}\r\n        >\r\n        <Header>\r\n            <Typography>New Message</Typography>\r\n            <Close fontSize='small' onClick={(e) => CloseMail(e)}/>\r\n        </Header>\r\n        <RecipientsWrapper>\r\n            <InputBase name='to' placeholder='Recipients' onChange={(e) => onValueChange(e)}/>\r\n            <InputBase name='subject' placeholder='Subject' onChange={(e) => onValueChange(e)}/>\r\n        </RecipientsWrapper>\r\n        <TextField \r\n            multiline\r\n            rows={14}\r\n            sx = {{'& .MuiOutlinedInput-notchedOutline': {border: 'none'}}}\r\n            onChange={(e) => onValueChange(e)}\r\n            name='body'\r\n        />\r\n        <Footer>\r\n            <CustomButton onClick={(e) => SendMail(e)}>Send</CustomButton>\r\n            <DeleteOutline onClick={() => setOpenDialog(false)}/>\r\n        </Footer>\r\n        <Box></Box>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default ComposeMail;","import {Box, Button, styled, List, ListItem} from \"@mui/material\";\r\nimport {CreateOutlined} from \"@mui/icons-material\";\r\nimport SIDEBAR_DATA from '../config/sidebar.config'; \r\nimport { useState } from \"react\";\r\nimport ComposeMail from \"./Compose\"; \r\nimport { useParams, NavLink } from 'react-router-dom';\r\nimport {routes} from '../routes/routes.js';\r\n\r\nconst ComposeButton = styled(Button)({\r\n    background: '#c2e7ff',\r\n    color: '#001d35',\r\n    padding: 15,\r\n    borderRadius: 16, \r\n    minWidth: 140,\r\n    textTransform: 'none',\r\n    marginLeft: 10\r\n});\r\n\r\nconst Container = styled(Box)({\r\n    padding: 8,\r\n    '& > ul':{\r\n        padding: '10px 0 0 5px',\r\n        fontSize: 14,\r\n        cursor: 'pointer',\r\n        fontWeight: 500,\r\n        '& > a':{\r\n            textDecoration: 'none',\r\n            color: 'inherit'\r\n        }\r\n    },\r\n    '& > ul > a >li > svg':{\r\n        marginRight: 20\r\n    }\r\n})\r\nconst SideBarContents = function(){\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    const {type} = useParams();\r\n\r\n    function onComposeClick(){\r\n        setOpenDialog(true);\r\n    }\r\n    return (\r\n        <Container>\r\n            <ComposeButton onClick={onComposeClick}>\r\n                <CreateOutlined />Compose\r\n            </ComposeButton>\r\n            <List>\r\n                {\r\n                    SIDEBAR_DATA.map(data => (\r\n                        <NavLink key={data.name} to={`${routes.emails.path}/${data.name}`}>\r\n                            <ListItem style={type === data.name.toLowerCase() ?\r\n                            { backgroundColor: \"#d3e3fd\",\r\n                              borderRadius: \"0 16px 16px 0\"}: {}}>\r\n                                <data.icon/>{data.title}\r\n                            </ListItem>\r\n                        </NavLink>\r\n                    ))\r\n                }\r\n            </List>\r\n            <ComposeMail openDialog={openDialog} setOpenDialog={setOpenDialog}/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SideBarContents;","import {Drawer, styled} from \"@mui/material\";\r\nimport SideBarContents from \"./SideBarContents\";\r\nconst SideBar = function({openDrawer}){\r\n    return (\r\n        <Drawer \r\n            anchor='left'\r\n            open={openDrawer}\r\n            hideBackdrop={true}\r\n            ModalProps={{\r\n                keepMounted: true\r\n            }}\r\n            variant=\"persistent\"\r\n            sx = {{\r\n                '& .MuiDrawer-paper':{\r\n                    marginTop: '64px',\r\n                    width: 250,\r\n                    background: \"#F5F5F5\",\r\n                    borderRight: 'none',\r\n                    height: 'calc(100vh - 64px)'\r\n                }\r\n            }}\r\n        >\r\n        <SideBarContents />\r\n        </Drawer>\r\n        \r\n    )\r\n}\r\n\r\nexport default SideBar;","import { useState, Suspense } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport SideBar from \"../components/SideBar\";\r\nimport Emails from \"../components/Emails\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport SuspenseLoader from \"../components/common/SuspenseLoader\";\r\nimport { Box } from \"@mui/material\";\r\n\r\nconst Main = function(){\r\n    const [openDrawer, setOpenDrawer] = useState(true);\r\n    const toggleDrawer = function(){\r\n        setOpenDrawer(prevState => !prevState);\r\n    }\r\n    return( \r\n    <>\r\n        <Header toggleDrawer={toggleDrawer}/>\r\n        <Box>\r\n            <SideBar openDrawer={openDrawer}/>\r\n            <Suspense fallback={<SuspenseLoader />}>\r\n                <Outlet context={{openDrawer}}/>\r\n            </Suspense>\r\n        </Box>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Main;","export const API_URLS = {\r\n    saveSentEmail: {\r\n        endpoint: 'save',\r\n        method: 'POST'\r\n    },\r\n    getEmailFromType: {\r\n        endpoint: 'emails',\r\n        method: 'GET'\r\n    },\r\n    saveDraftEmails: {\r\n        endpoint: 'save-draft',\r\n        method: 'POST'\r\n    },\r\n    moveEmailsToBin: {\r\n        endpoint: 'bin',\r\n        method: 'POST'\r\n    },\r\n    toggleStarredEmail: {\r\n        endpoint: 'starred',\r\n        method: 'POST'\r\n    },\r\n    deleteEmail: {\r\n        endpoint: 'delete',\r\n        method: 'DELETE'\r\n    }\r\n}"],"names":["Wrapper","styled","Box","padding","background","cursor","display","alignItems","width","fontSize","Indicator","Typography","color","borderRadius","marginRight","Date","marginLeft","_ref","email","selectedEmails","setRefreshScreen","setSelectedEmails","navigate","useNavigate","toggleStarredService","useApi","API_URLS","toggleStarredEmail","toggleStarredMails","call","id","_id","value","starred","prevState","_jsxs","children","_jsx","Checkbox","size","checked","includes","onChange","filter","concat","_toConsumableArray","Star","style","onClick","StarBorder","routes","view","path","state","overflow","name","subject","body","window","date","getDate","toLocaleString","month","Component","flexDirection","marginTop","opacity","StyledDivider","Divider","message","heading","subHeading","_getEmailsService$res2","_getEmailsService$res3","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","refreshScreen","openDrawer","useOutletContext","type","useParams","getEmailsService","getEmailFromType","moveEmailsToBinService","moveEmailsToBin","deleteEmailService","deleteEmail","useEffect","e","target","_getEmailsService$res","emails","response","map","selectAllEmails","DeleteOutline","List","Email","_idd","length","NoMails","EMPTY_TABS","gmailLogo","emptyProfilePic","inbox","drafts","sent","bin","allmail","API_GMAIL","_asyncToGenerator","_regeneratorRuntime","mark","_callee","urlObject","payload","wrap","_context","prev","next","axios","method","url","endpoint","data","abrupt","stop","_x","_x2","_x3","apply","arguments","setResponse","error","setError","_useState5","_useState6","isLoading","setIsLoading","res","_args","undefined","t0","finish","StyledAppBar","AppBar","boxShadow","SearchWrapper","minWidth","maxWidth","height","justifyContent","OptionsWrapper","toggleDrawer","position","Toolbar","MenuIcon","src","alt","Search","InputBase","placeholder","Tune","HelpOutline","SettingsOutlined","AppsOutlined","AccountCircleOutlined","title","icon","Inbox","StarOutline","Send","InsertDriveFile","MailOutline","dialogstyle","maxHeight","Header","fontWeight","RecipientsWrapper","borderBottom","Footer","CustomButton","Button","textTransform","openDialog","setOpenDialog","setData","sentEmailService","saveSentEmail","saveDraftService","saveDraftEmails","config","Host","Username","process","Password","Port","onValueChange","_objectSpread","_defineProperty","Dialog","open","PaperProps","sx","Close","preventDefault","to","from","image","CloseMail","TextField","multiline","rows","border","send","To","From","Subject","Body","then","alert","SendMail","ComposeButton","Container","textDecoration","CreateOutlined","SIDEBAR_DATA","NavLink","ListItem","toLowerCase","backgroundColor","ComposeMail","Drawer","anchor","hideBackdrop","ModalProps","keepMounted","variant","borderRight","SideBarContents","setOpenDrawer","_Fragment","SideBar","Suspense","fallback","SuspenseLoader","Outlet","context"],"sourceRoot":""}